// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using agent_api.Data;

#nullable disable

namespace agent_api.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("agent_api.Model.AgentModel", b =>
                {
                    b.Property<long>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AgentId"));

                    b.Property<long>("AgentLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("AgentNickName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AgentId");

                    b.HasIndex("AgentLocationId")
                        .IsUnique();

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("agent_api.Model.LocationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int>("x")
                        .HasColumnType("int");

                    b.Property<int>("y")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LocationModel");
                });

            modelBuilder.Entity("agent_api.Model.MissionModel", b =>
                {
                    b.Property<long>("MissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("MissionId"));

                    b.Property<long>("AgentId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("MissionCompletedTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("MissionFinalLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("MissionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MissionTime")
                        .HasColumnType("float");

                    b.Property<long>("TargetId")
                        .HasColumnType("bigint");

                    b.HasKey("MissionId");

                    b.HasIndex("AgentId");

                    b.HasIndex("MissionFinalLocationId")
                        .IsUnique();

                    b.HasIndex("TargetId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("agent_api.Model.TargetModel", b =>
                {
                    b.Property<long>("TargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("TargetId"));

                    b.Property<long>("TargetLocationId")
                        .HasColumnType("bigint");

                    b.Property<string>("TargetName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetPicture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TargetId");

                    b.HasIndex("TargetLocationId")
                        .IsUnique();

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("agent_api.Model.AgentModel", b =>
                {
                    b.HasOne("agent_api.Model.LocationModel", "AgentLocation")
                        .WithOne()
                        .HasForeignKey("agent_api.Model.AgentModel", "AgentLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AgentLocation");
                });

            modelBuilder.Entity("agent_api.Model.MissionModel", b =>
                {
                    b.HasOne("agent_api.Model.AgentModel", "Agent")
                        .WithMany("Missions")
                        .HasForeignKey("AgentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("agent_api.Model.LocationModel", "MissionFinalLocation")
                        .WithOne()
                        .HasForeignKey("agent_api.Model.MissionModel", "MissionFinalLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("agent_api.Model.TargetModel", "Target")
                        .WithMany("Missions")
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Agent");

                    b.Navigation("MissionFinalLocation");

                    b.Navigation("Target");
                });

            modelBuilder.Entity("agent_api.Model.TargetModel", b =>
                {
                    b.HasOne("agent_api.Model.LocationModel", "TargetLocation")
                        .WithOne()
                        .HasForeignKey("agent_api.Model.TargetModel", "TargetLocationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("TargetLocation");
                });

            modelBuilder.Entity("agent_api.Model.AgentModel", b =>
                {
                    b.Navigation("Missions");
                });

            modelBuilder.Entity("agent_api.Model.TargetModel", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
